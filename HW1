1.1.1
a. (0+15)/2 = 7

b. 2.0e-6*100000000.1
  =2 *10^{-6} * 1000000001 * 10^{-1} = 2000000002 * 10^{-7} = 200.0000002

c. true&&false || true&& true = true

1.1.2
a. (1+2.236)/2 
type: double
value: 1.618

b. 1+2+3+4.0
type: int
value: 10.0

c. 4.1>= 4
type: mixed type operator
value:true

d. 1+2+"3"
type: string
value: "123"


1.1.4
a) if (a > b) then c = 0;  // remove the word "then"
b) if a > b { c = 0; }     // need to add brackets 
c) if (a > b) c = 0;       // this one is correct
d) if (a > b) c = 0 else b = 0;   // need to add this ;



1.1.6 - it will print a fibonacci sequence.

1.1.7 
a.  
    double t = 9.0;
    while(Math.abs(t - 9.0/t) > .001)
        t = (9.0/t + t) / 2.0;
    StdOut.printf("%.5f\n", t);

while loop produces:
5.0
3.4
3.02
converging towards 3.0000000

When run mine produced: 3.00009

b.

int sum = 0;
for (int i = 1; i < 1000; i++)
    for(int j = 0; j < 1000; j++)
        sum++;
StdOut.println(sum);

should produce 1000 * 1000 

c.

int sum = 0;
for (int i = 1; i < 1000; i++)
    for(int j = 0; j < 1000; j++)
        sum++;
StdOut.println(sum);

The outer loop doubles each time, bounded by 1000.  log2(1000)/log2(2) = 9.97 so will go from 0 - 9


sum will be 10 * 1000 = 10000


1.1.8 What do each of the following print?

a. System.out.println('b');

//answer:prints b

This one is also Correct.

b. System.out.println('b' + 'c');

//answer:prints bc


c. System.out.println('a' + 4);

This one is Correct.


1.1.12 What does the following print?

		  int[] a = new int[10];
		  for (int i = 0; i < 10; i++)
			  a[i] = 9 - i;
		  for (int i = 0; i < 10; i++)
			  a[i] = a[a[i]];
		  for (int i = 0; i < 10; i++)
			  System.out.println(i);

answer:It will print 0 to 9.


1.2.12
see Java file


1.3.3
b, f and g cannot occur.  Once an item has been stacked on top of another item, there
is no way to pop them in a di erent order.
(b) 0 1 cannot occur.
(f) 1 7 cannot occur.
(g) 0 2 cannot occur.

1.3.9
see Java file
  

1.4.1
Answer:n(n-1)(n-2)/6
      If using n=5, then 5(5-1)(5-2)/6 = 10
      If using n=10, then 10(10-1)(10-2)/6 = 120

1.4.5
Answer:
    a. N + 1 = N
    b. 1 + 1 / N = 1
    c. (1 + 1 / N)(1 + 2 / N) =1
    d. 2N3 - 15N2 + N = 2N3
    e. lg(2N) / lg(N) = 1
    f. lg(N2 + 1) / lg(N) = 2
    g. n100/2n = n100
    
1.4.6
ANSWER:
A. running times: n
B. running times: O(N)
C. running times: O(N log(N))

1.4.9
Answer:2N0 = 2bT
4N0 =2b(2^b*T)
8N0 = 2b(2^2b*T)
16N0= 2b(2^3b*T)
Formula: 2^r*N0=2^rb*T





